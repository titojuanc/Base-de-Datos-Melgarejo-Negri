/*3*/
TP_Restaurante_G4> db.Restaurante.countDocuments()

/*4*/
TP_Restaurante_G4> db.Restaurante.aggregate([{$match:{"servicios_adicionales.delivery": true ,"servicios_adicionales.pet_friendly": true}},{$lookup:{from: "Menues", localField: "id_restaurante", foreignField: "id_restaurante", as: "menu"}},{$unwind: "$menu"}, {$unwind : "$menu.platos"}, {$unwind: "$menu.platos.apto_para"},{$match: {"menu.platos.apto_para": "vegano"}}])

TP_Restaurante_G4> db.Restaurante.aggregate([{$lookup:{from: "Menues", localField: "id_restaurante", foreignField: "id_restaurante", as: "menu"}},{$unwind: "$menu"}, {$unwind : "$menu.platos"}, {$unwind: "$menu.platos.apto_para"},{$match: {"menu.platos.apto_para": "vegano", "servicios_adicionales.delivery": true, "servicios_adicionales.pet_friendly": true}}])

/*Fran, ejecutá la 5 para que se agregue el campo*/
/*5*/
db.Restaurante.updateMany({}, {$set: {ultima_actualizacion: new Date()}})

/*Agregá un descuento del 10%, no hay uno con la base que tenemos subida (tuve que agregar acá en casa) */
/*este solo agarra el descuento, no el nombre. Para conseguirlo habría que hacer un agregate con llokup, unwind y match*/
/*6*/
db.Descuentos.find({"descuentos.porcentaje": 10})


/*7*/
/*acá lo logré hacer, pero se podría agregar un unwind también)*/
db.Restaurante.aggregate([
  {$lookup: {
      from: "Descuentos",
      localField: "id_restaurante",
      foreignField: "id_restaurante",
      as: "descuentos"
    }
  },
  {$match: {"descuentos.descuentos.porcentaje": 10}},
  {$project: {_id:0, nombre: 1}}
])

/*8*/
db.Restaurante.updateMany(
  {$or: [{ "servicios_adicionales.delivery": true } ]},
  {$set: { "horario.0": 11 }}
)

/*9*/
db.Restaurante.aggregate([{$lookup : {from: "Eventos_especiales", localField: "id_restaurante", foreignField : "id_restaurante", as : "eventos"}}, {$unwind : "$eventos"}, {$unwind : "$eventos.eventos"}, {$match : {"eventos.eventos.nombre" : "Musica en vivo"}}, {$project : {_id:0,nombre:1,direccion:1,telefono:1}}])

/*10*/
db.Descuentos.updateOne({id_restaurante : 2}, {$push : {descuentos: {motivo: "Nuevo motivo", fecha_inicio: "05/05/2025", fecha_fin: "10/10/2025", porcentaje: 25}}})

/*11*/
db.Restaurante.aggregate([{$lookup : {from: "Menues", localField: "id_restaurante", foreignField: "id_restaurante", as: "menu"}}, {$lookup : {from: "Descuentos", localField: "id_restaurante", foreignField: "id_restaurante", as: "descuento"}}, {$unwind : "$menu"}, {$unwind : "$menu.platos"}, {$unwind: "$descuento"}, {$unwind: "$descuento.descuentos"}, {$match: {"descuento.descuentos.fecha_inicio": {$lte : "$$NOW"}, "descuento.descuentos.fecha_fin": {$gte : "$$NOW"}}}, {$project : {_id:0,nombre:1,servicios_adicionales:1}}])

/*12*/
db.Restaurante.aggregate([{$lookup: {from: "Descuentos", localField: "id_restaurante", foreignField: "id_restaurante", as: "descuento"}}, {$unwind: "$descuento"}, {$unwind: "$descuento.descuentos"},{$match : {"descuento.descuentos.motivo": "jubilado", "descuento.descuentos.motivo": "estudiante"}}])

/*13*/
db.Restaurante.aggregate([
  {
    $lookup: {
      from: "Descuentos",
      localField: "id_restaurante",
      foreignField: "id_restaurante",
      as: "descuento"
    }
  },
  { $unwind: "$descuento" },
  { $unwind: "$descuento.descuentos" },
  {
    $addFields: {
      "descuento.descuentos.fecha_inicio_dt": {
        $dateFromString: {
          dateString: "$descuento.descuentos.fecha_inicio",
          format: "%d/%m/%Y"
        }
      },
      "descuento.descuentos.fecha_fin_dt": {
        $dateFromString: {
          dateString: "$descuento.descuentos.fecha_fin",
          format: "%d/%m/%Y"
        }
      }
    }
  },
  {
    $match: {
      "descuento.descuentos.fecha_inicio_dt": { $lte: new Date() },
      "descuento.descuentos.fecha_fin_dt": { $gte: new Date() },
      "descuento.descuentos.porcentaje": { $gt: 20 },
      "servicios_adicionales.delivery": true,
      "servicios_adicionales.reserva_online": true
    }
  }
])

/*14*/
db.Restaurante.aggregate([{$lookup: {from: "Descuentos", localField: "id_restaurante", foreignField: "id_restaurante", as: "descuento"}}, {$match: {descuento : {$eq : []}}}, {$project: {_id:0,nombre:1,direccion:1,telefono:1}}])

/*15*/
db.Resenas.find({ id_restaurante: 2 }, { _id: 0 })

/*16*/
db.Restaurante.aggregate([{$lookup: {from: "Descuentos", localField: "id_restaurante", foreignField: "id_restaurante", as: "descuento"}}, {$project: {_id:0,nombre:1,direccion:1,telefono:1,cantDesc : {$size:"$descuento"}}}, {$match: {cantDesc: {$gt : 2}}}])

/*17*/
$elemMatch sirve para que se tome el objeto entero para una verificacion. De lo contrario, se toma al documento como elemento de comparacion.

db.Descuentos.find({descuentos: {$elemMatch: {porcentaje: 40, motivo: "cerveza"}}})

/*18*/
db.Restaurante.aggregate([{$lookup: {from: "Menues", localField: "id_restaurante", foreignField: "id_restaurante", as: "menu"}}, {$unwind: "$menu"}, {$unwind: "$menu.platos"}, {$unwind: "$menu.platos.apto_para"} ,{$match: {"menu.platos.apto_para" : {$in: ["TACC"]}}}])

/*19*/
db.Restaurante.aggregate([{ $lookup: { from: "Descuentos", localField: "id_restaurante", foreignField: "id_restaurante", as: "descuento" } }, { $unwind: "$descuento" }, { $unwind: "$descuento.descuentos" }, { $addFields: { "descuento.descuentos.fecha_inicio_dt": { $dateFromString: { dateString: "$descuento.descuentos.fecha_inicio", format: "%d/%m/%Y" } }, "descuento.descuentos.fecha_fin_dt": { $dateFromString: { dateString: "$descuento.descuentos.fecha_fin", format: "%d/%m/%Y" } } } }, { $match: { "descuento.descuentos.fecha_inicio_dt": { $lte: new Date() }, "descuento.descuentos.fecha_fin_dt": { $gte: new Date() } } }])

/*20*/

db.Menues.find({}, {id_restaurante: 1})
db.Restaurantes.deleteMany({"id_restaurante":{$nin: [1,2,3,4]}})

/*21*/
db.Restaurante.updateMany({id_restaurante : 1}, {$inc : {"horario.0": 1}})

db.Restaurante.updateMany({id_restaurante: 1}, {$max : {"horario.0": 12}})

db.Menues.updateOne({id_restaurante: 1}, {$mul: {"platos.0.precio": 1.1}})

db.Restaurante.updateMany({}, { $rename: { "telefono": "contacto_telefono" } })

db.Restaurante.updateMany({}, { $unset: { "contacto_telefono": "" } })

db.Restaurante.updateMany({id_restaurante: 1}, { $pop: { metodo_de_pago: 1 } })

db.Restaurante.updateMany({id_restaurante: 1}, { $pull: { metodo_de_pago: "efectivo" } })

db.Restaurante.updateMany({id_restaurante: 1}, { $push: { metodo_de_pago: "efectivo" } })

/*22*/
mongoexport --db=TP --collection=Restaurante --out=TP.Restaurantes.json --jsonArray

mongoimport --db TP --collection Restaurante --file TP.Restaurantes.json --jsonArray







